{
	"reactClassComponent": {
	  "prefix": "rcc",
	  "body": [
      "import React, { Component } from 'react';",
      "",
      "class ${1:${TM_FILENAME_BASE}} extends Component {",
      "  render() {",
      "    return (",
      "      <div>",
      "        $0",
      "     </div>",
      "   );",
      "  }",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};",
      ""
    ],
	  "description": "Creates a React class component."
	},
  "reactFunctionalComponent": {
    "prefix": "rfc",
    "body": [
      "import React, { memo } from 'react';",
      "",
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    $0",
      " );",
      "};",
      "",
      "export default memo(${1:${TM_FILENAME_BASE}};)",
      ""
    ],
	  "description": "Creates a memoized, functional React component."
  },
  "reactUseCallback": {
		"prefix": "rhucb",
		"body": [
      "const ${1:variableName} = useCallback(() => {",
      "  $0",
      "}, []);"
    ],
		"description": "Creates a React useCallback hook."
  },
  "reactContextHook": {
		"prefix": "rhuc",
		"body": [
      "const ${1:variableName} = useContext(${2:contextName});"
    ],
		"description": "Creates a React useContext hook."
  },
  "reactUseEffect": {
		"prefix": "rhue",
		"body": [
      "useEffect( () => {",
      "  $0",
      "}, []);"
    ],
		"description": "Creates a React useEffect hook."
  },
  "reactUseMemo": {
		"prefix": "rhum",
		"body": [
      "const ${1:variableName} = useMemo(() => ({",
      "  $0",
      "}), []);"
    ],
		"description": "Creates a React useMemo hook."
  },
  "reactUseSelector": {
		"prefix": "rhuse",
		"body": [
      "const ${1:variableName} = useSelector($0);"
    ],
		"description": "Creates a React Redux useSelector hook."
  },
	"reactStateHook": {
		"prefix": "rhus",
		"body": [
      "const [${1:variableName}, set${2:capsVariableName}] = useState(${2:defaultValue});"
    ],
		"description": "Creates a React state hook."
  },
  "reactAsyncFunction": {
		"prefix": "raf",
		"body": [
      "const ${1:variableName} = async () => {",
      "  $0",
      "};"
    ],
		"description": "Creates an asynchronous function."
  }
}
